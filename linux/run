#!/bin/bash
# Collect data.

# Make sure we're root.
[[ $UID == 0 || $EUID == 0 ]] || (
        echo "Must be root!"
        exit 1
        ) || exit 1

# Where should we store the data?
savedir=$1
[[ -n $savedir ]] || (
    echo -n "Directory to store data: "
    read savedir
    [[ -d $savedir ]] || mkdir -p "$savedir" || (
        echo "Not a valid directory."
        exit 1
        ) || exit 1
    ) || exit 1

# Where are our binaries?
bin="$(pwd)/tools/$(uname -m)/bin"
[[ -d $bin ]] || ( 
    echo "Linux IR binaries cannot be found."
    echo "This script must be run inside its own directory."
    exit 1
    ) || exit 1

# Create directory structure.
saveto="$savedir/$(hostname)-$(date +%Y.%m.%d-%H.%M.%S)"
mkdir -p "$saveto"
logfile="$saveto/log.txt"

log() {
  echo -n "$(date +"%b %d %H:%M:%S") $(hostname) irscript: $1" | tee -a "$logfile"
}

# Start the log.
echo -n > "$logfile"
log "Incident response volatile data collection script."
log "Starting..."

# 1. Acquire a full memory dump.
log "Starting dc3dd to dump system memory..."
log "$bin/dc3dd if=/dev/mem hash=sha256 of='${memfile}.dd' log='${memfile}.log' hlog='${memfile}.sum'"
memfile="$saveto/memdump-$(hostname)-linux-$(uname -m)"
"$bin/dc3dd" if=/dev/mem hash=sha512 of="${memfile}.dd" \
             log="${memfile}.log" hlog="${memfile}.sum"
log "dc3dd finished."

# 2. Collect network information.
log "Collecting network information..."
log "netstat -ap"
netstat -ap > "$saveto/network.txt"
             
# 3. Collect information about opened files and running processes.
log "Collecting information about opened files and running processes."
log "lsof"
lsof > "$saveto/opened_files.txt"

# 4. Collect user/system information.
log "Collecting user/system information."
log "w"
w > "$saveto/users_w.txt"
log "who"
who > "$saveto/users_who.txt"
log "id"
id > "$saveto/users_id.txt"
log "uname -a"
uname -a > "$saveto/system_uname.txt"
log "Dumping kernel message buffer (dmesg)."
log "dmesg"
dmesg > "$saveto/system_dmesg.txt"

# 5. Collect device information.
log "Collecting information about currently mounted devices."
log "mount"
mount > "$saveto/mounted_devices.txt"

# Create checksums for all files.
log "Creating checksums (sha512sum) for all files."
log "sha512sum '$saveto/*'"
sha512sum "$saveto/"* > "$saveto/.sums" "$saveto/sha512sums.txt"

log "All tasks completed. Exiting."
